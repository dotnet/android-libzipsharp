<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="$(MSBuildThisFileDirectory)..\LibZipSharp.props" />

  <PropertyGroup>
    <TargetFrameworks>net471;net7.0;netcoreapp3.1</TargetFrameworks>

    <IsPackable>false</IsPackable>
    <LibZipSharpBundleAllNativeLibraries>true</LibZipSharpBundleAllNativeLibraries>
    <ReferenceNuget Condition="'$(ReferenceNuget)' == ''">False</ReferenceNuget>
    <DefineConstants Condition="'$(OS)' == 'Windows_NT'">$(DefineConstants);WINDOWS</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="nunit" Version="3.12.0" />
    <PackageReference Include="NUnit3TestAdapter" Version="3.16.1" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.4.1" />
    <PackageReference Include="Xamarin.LibZipSharp" Version="$(_LibZipSharpNugetVersion)" Condition="'$(ReferenceNuget)' == 'True'" />
    <PackageReference Include="NUnit.ConsoleRunner" Version="3.11.1" />
    <PackageReference Include="Mono.Unix" Version="$(_MonoPosixNugetVersion)" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\LibZipSharp\libZipSharp.csproj" Condition="'$(ReferenceNuget)' != 'True'" />
    <None Include="$(_NativeBuildDir)\lib\Darwin\$(_NativeLibraryBaseName).dylib" Condition="'$(ReferenceNuget)' != 'True' And Exists ('$(_NativeBuildDir)\lzsbuild\lib\Darwin\$(_NativeLibraryBaseName).dylib')">
      <Link>$(_NativeLibraryBaseName).dylib</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="$(_NativeBuildDir)\lib\win64\RelWithDebInfo\$(_NativeLibraryBaseName).dll" Condition="'$(ReferenceNuget)' != 'True' And Exists ('$(_NativeBuildDir)\lib\win64\RelWithDebInfo\$(_NativeLibraryBaseName).dll')">
      <Link>$(_NativeLibraryBaseName).dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="$(_NativeBuildDir)\lib\Linux\$(_NativeLibraryBaseName).so" Condition="'$(ReferenceNuget)' != 'True' And Exists ('$(_NativeBuildDir)\lib\Linux\$(_NativeLibraryBaseName).so')">
      <Link>$(_NativeLibraryBaseName).so</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="$(_NativeBuildDir)\lib\Linux\$(_NativeLibraryBaseName).so.$(_LibZipSharpAssemblyVersionMajor).$(_LibZipSharpAssemblyVersionMinor).$(_LibZipSharpAssemblyVersionPatch).debug" Condition="'$(ReferenceNuget)' != 'True' And Exists ('$(_NativeBuildDir)\lib\Linux\$(_NativeLibraryBaseName).so.$(_LibZipSharpAssemblyVersionMajor).$(_LibZipSharpAssemblyVersionMinor).$(_LibZipSharpAssemblyVersionPatch).debug')">
      <Link>$(_NativeLibraryBaseName).so.$(_LibZipSharpAssemblyVersionMajor).$(_LibZipSharpAssemblyVersionMinor).$(_LibZipSharpAssemblyVersionPatch).debug</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="packaged_resources">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="info.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="characters_players.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="object_spawn.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="RunNunitTests" DependsOnTargets="Build">
    <PropertyGroup>
      <Host Condition="'$(OS)' != 'Windows_NT'">mono </Host>
    </PropertyGroup>
    <Exec Command="$(Host)$(NuGetPackageRoot)/nunit.consolerunner/3.11.1/tools/nunit3-console.exe LibZipSharp.UnitTest.dll"
      WorkingDirectory="$(OutputPath)net471"
    />
  </Target>
</Project>
